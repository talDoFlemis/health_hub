version: "3.9"
services:
  nginx:
    image: nginx:stable-alpine3.17-slim
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      frontend:
        condition: service_healthy

  frontend:
    image: health-frontend
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: "${NEXT_PUBLIC_API_URL:-http://localhost:7777}"
        DOCKER_BUILDKIT: 1
    working_dir: /app
    environment:
      API_URL: "${API_URL:-http://backend:7777}"
      NEXTAUTH_URL: "${NEXTAUTH_URL:-http://localhost}"
      NEXTAUTH_SECRET: "${NEXTAUTH_SECRET:-bigsecretgeneratedrandonly}"
    ports:
      - "3000:3000"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO - http://localhost:3000/api/health | grep health",
        ]
      interval: 15s
      timeout: 5s
      retries: 5

  backend:
    image: health-backend
    build:
      context: backend
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    ports:
      - "7777:7777"
    environment:
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL:-jdbc:postgresql://db:5432/health}"
      SPRING_DATASOURCE_USERNAME: "${SPRING_DATASOURCE_USERNAME:-admin}"
      SPRING_DATASOURCE_PASSWORD: "${SPRING_DATASOURCE_PASSWORD:-senha123}"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO - http://localhost:7777/actuator/health | grep UP",
        ]
      interval: 15s
      timeout: 5s
      retries: 5

  db:
    image: postgres:alpine3.18
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: senha123
      POSTGRES_DB: health
    volumes:
      - health:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d health -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    name: health_hub

volumes:
  health:
